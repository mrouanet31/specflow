title,body,estimate,labels,assignee
"P2-101: Audit d'intégration MVP","Lister points d'extension dans le MVP (webhooks, API, events, auth) et définir contracts. Acceptance: rapport d'audit avec endpoints cibles et diagramme d'intégration.",2,"phase2,discovery,backend","Tech Lead Backend"
"P2-102: Provisionner vector DB / Elasticsearch","Déployer instance vector DB (Pinecone/Milvus/OpenSearch) et configurer accès staging. Acceptance: index opérationnel et accessible depuis staging.",5,"phase2,infra,devops","DevOps"
"P2-103: Schema d'indexation specs","Définir mapping/metadata (id, version, project, sections, tags, embeddings). Acceptance: mapping documenté et validé par backend.",3,"phase2,backend,search","Backend"
"P2-104: PoC ingestion -> embeddings -> retrieval","Pipeline prototype pour ingérer specs, calculer embeddings, stocker et récupérer par similarité. Acceptance: requête de similarité retourne résultats pertinents pour 5 samples.",8,"phase2,ml,backend","ML Engineer"
"P2-105: Design marketplace model initial","Définir catalogue, champs metadata, pricing tiers et flow contribution. Acceptance: maquette des écrans clefs et modèle de données.",3,"phase2,design,po","Designer"
"P2-201: Endpoint /api/plan-builder","Endpoint qui accepte une spec et renvoie un PlanDraft (JSON schema). Acceptance: endpoint retourne PlanDraft valide pour 3 sample specs.",5,"phase2,backend,planner","Backend"
"P2-202: Template engine (rule-based)","Implémenter génération de sections à partir de templates (mustache/liquid). Acceptance: 3 templates fonctionnels (microservice, monolith, serverless).",8,"phase2,backend,templates","Backend"
"P2-203: Frontend wizard UI","Wizard pour saisir paramètres (stack, constraints) et prévisualiser PlanDraft. Acceptance: utilisateur peut générer et visualiser PlanDraft depuis UI.",8,"phase2,frontend,ux","Frontend"
"P2-204: Export JSON/MD","Exporter PlanDraft en JSON et MD. Acceptance: téléchargement export OK.",3,"phase2,backend,export","Backend"
"P2-205: Tests & validation","Tests unitaires et integration pour plan-builder. Acceptance: tests passent en CI.",3,"phase2,qa,testing","QA"
"P2-301: Data model mapping spec->implementation","Concevoir tables/indices reliant specs, plans, tests, coverage. Acceptance: data model documenté et migrations prêtes.",5,"phase2,backend,data","Backend"
"P2-302: Endpoint metrics & rules engine","Endpoints pour Spec Completion Score, Risk Heat Map calculs basiques. Acceptance: endpoints retournent metrics sample.",5,"phase2,backend,metrics","Backend"
"P2-303: Frontend dashboard widgets","Widgets pour coverage, open issues, acceptance checklist. Acceptance: dashboard rendu avec données mocks et connecté aux endpoints.",8,"phase2,frontend,analytics","Frontend"
"P2-304: CI integration for test results ingestion","Ingest test results from CI pipelines into dashboard data model. Acceptance: sample test results appear in dashboard.",5,"phase2,ci,devops","DevOps"
"P2-401: OAuth connectors (GitHub basic)","Implement OAuth flow for GitHub; store tokens securely. Acceptance: user can link GitHub account and grant minimal scopes.",8,"phase2,git,backend","Backend"
"P2-402: Repo onboarding UI","UI to select repo, branches and configure sync settings. Acceptance: onboarding flow completes and stores config.",5,"phase2,frontend,ux","Frontend"
"P2-403: PR creation engine","Given a task/plan, create branch, commit changes and open PR with template. Acceptance: PR created in test repo with expected contents.",8,"phase2,backend,git","Backend"
"P2-404: Webhooks listener","Listen to repo events (PR merged, CI status) and update spec/task status. Acceptance: merging PR updates task status in app.",5,"phase2,backend,webhooks","Backend"
"P2-501: IA provider integration & rate limiter","Hook to model provider (OpenAI/Anthropic) with retry and rate limiting. Acceptance: provider calls succeed within quotas, errors handled.",5,"phase2,ml,backend","Backend"
"P2-502: Context builder (RAG) pipeline","Implement RAG: retrieve relevant docs, build prompt, call model. Acceptance: suggestions generated for sample specs with context.",8,"phase2,ml,backend","ML Engineer"
"P2-503: Assistant UI (inline suggestions)","Inline assistant panel showing suggestions and allowing accept/reject. Acceptance: suggestions visible and user can accept to insert into doc.",5,"phase2,frontend,ia","Frontend"
"P2-504: Logging & feedback loop","Log model inputs/outputs and user feedback for future training. Acceptance: logs stored and accessible for inspection.",3,"phase2,ml,backend","Backend"
"P2-601: Catalog model & listing API","Implement catalog DB model and listing endpoints with filters/tags. Acceptance: listings returned with metadata.",5,"phase2,marketplace,backend","Backend"
"P2-602: Marketplace UI (browse & upload)","Browse templates, upload new template flow, fork/clone UI. Acceptance: upload and fork flows functional in staging.",8,"phase2,frontend,marketplace","Frontend"
"P2-603: Basic moderation tooling","Admin interface to review submissions and accept/reject. Acceptance: admin can moderate submissions.",3,"phase2,marketplace,admin","Backend"
"P2-604: Legal & TOS skeleton","Add TOS + content policy skeleton. Acceptance: TOS page published and linked in UI.",1,"phase2,legal,po","PO/Legal"
"P2-605: Polish: docs & demos","Create how-to docs, demo flows and finalize small UX fixes. Acceptance: docs published and demo flows available.",3,"phase2,docs,po","PO"
